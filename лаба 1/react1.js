function tick() {
     const element = (
          <>
               <h1>Сейчас - {new Date().toLocaleTimeString()}</h1>
          </>
     );
     ReactDOM.render(element, document.getElementById("root"));
}
setInterval(tick, 100);

// ReactDOM.render()

// Управляет содержимым передаваемого вами узла контейнера. Любые существующие элементы DOM внутри заменяются при первом вызове.

// Не изменяет узел контейнера (изменяет только дочерние элементы контейнера).

// React - это декларативная, эффективная и гибкая библиотека JS для создания пользовательских интерфейсов.
//  Он позволяет составлять сложные веб-коды из небольших и изолированных фрагментов кода, называемых "компонентами".

// React позволяет создавать очень быстрые приложения производительность которых превышает то, что достижимо с использованием лишь JS.
//  Это достигается за счет использования в React технологии, называемой Virtual DOM.

// Virtual DOM помогает веб-приложениям работать гораздо быстрее, чем если бы при их разработке использовался обычный JS.

// Одно существенное преимущество, которое дает нам React - это возможность создавать веб-компоненты, которые подходят для повторного использования.

// НО! Использование этого возвращаемого значения является устаревшим и этого следует избегать, т.к. в будущих версиях React компоненты могут отображаться асинхронно.

// Функциональные компоненты устроены довольно просто. А именно, в теле функции должна быть команда, возвращает JSX-код, который и представляет соответствующий компонент.

// Метод map() создаёт новый массив с результатом вызова указанной функции для каждого элемента массива.
